/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            * 
 * Jan Veverka, MIT, 25 Jul 2013                                             *
 * Numerical inverse of a function                                           *
 *****************************************************************************/

#ifndef FWLITE_TOOLS_ROONUMINVERSE_H
#define FWLITE_TOOLS_ROONUMINVERSE_H

#include "TGraph.h"
#include "TSpline.h"
#include "TArray.h"
#include "RooAbsReal.h"
#include "RooAbsRealLValue.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooNumInverse : public RooAbsReal {
public:
  RooNumInverse() {} ; 
  RooNumInverse(const char *name, const char *title,
		RooAbsRealLValue& xx,
		const RooAbsReal& ff,
		Double_t precision = 1.e-4);
  RooNumInverse(const RooNumInverse& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { 
    return new RooNumInverse(*this,newname); 
  }
  inline virtual ~RooNumInverse() { }

protected:

  RooRealProxy x_ ;
  TSpline3 spline_ ;
  Double_t precision_ ;
  
  Double_t evaluate() const ;
  void init(RooAbsRealLValue& xx, const RooAbsReal& ff);
  void consolidateGraph(TGraph& graph);

private:

  ClassDef(RooNumInverse,1) // Numerical inverse of f.
};
 
#endif
